import{_ as e,H as l,o as n,c as i,J as t,E as o,V as c,C as a,a as s}from"./chunks/framework.6e551575.js";const r="/img/study/小程序/小程序反编译爬取源码/application.jpg",d="/img/study/小程序/小程序反编译爬取源码/download.jpg",u="/img/study/小程序/小程序反编译爬取源码/foundxcx.png",_="/img/study/小程序/小程序反编译爬取源码/foundres.jpg",m="/img/study/小程序/小程序反编译爬取源码/pre.jpg",h="/img/study/小程序/小程序反编译爬取源码/xcx.jpg",g="/img/study/小程序/小程序反编译爬取源码/app.jpg",b="/img/study/小程序/小程序反编译爬取源码/mainstep.jpg",k="/img/study/小程序/小程序反编译爬取源码/stepone.jpg",y="/img/study/小程序/小程序反编译爬取源码/steptwo.jpg",x="/img/study/小程序/小程序反编译爬取源码/cmd.jpg",f="/img/study/小程序/小程序反编译爬取源码/copyurl.jpg",w="/img/study/小程序/小程序反编译爬取源码/success.jpg",j="/img/study/小程序/小程序反编译爬取源码/xcxres.jpg",$=JSON.parse('{"title":"🦊 小程序反编译爬取源码","description":"","frontmatter":{},"headers":[],"relativePath":"article/小程序/小程序反编译爬取源码.md","filePath":"article/小程序/小程序反编译爬取源码.md"}'),q={name:"article/小程序/小程序反编译爬取源码.md"},P=c('<h1 id="小程序反编译爬取源码" tabindex="-1">🦊 小程序反编译爬取源码 <a class="header-anchor" href="#小程序反编译爬取源码" aria-label="Permalink to &quot;:fox_face: 小程序反编译爬取源码&quot;">​</a></h1><blockquote><p>在日常开发学习中，若需要学习一些小程序的反编译爬取源码的技术，我这边给大家推荐一下新手教程，尽量按照步骤来，慢慢的你就熟练了。以下是爬取小程序代码的完整步骤，一起看看吧....</p></blockquote><h3 id="_1-首先我们先准备抓取代码必要的工具包" tabindex="-1">1. 首先我们先准备抓取代码必要的工具包 <a class="header-anchor" href="#_1-首先我们先准备抓取代码必要的工具包" aria-label="Permalink to &quot;1. 首先我们先准备抓取代码必要的工具包&quot;">​</a></h3><ul><li>以下是下载地址</li><li><a href="https://pan.baidu.com/s/16y6b9pJTgI6KVeAjH4X5Tw" target="_blank" rel="noreferrer">小程序反编译软件</a> 提取码: <code>ak47</code></li><li>然后将里面的两个文件下载解压之后，你会获得如下两个文件。</li></ul><p><img src="'+r+'" alt="软件所需图片"></p><h3 id="_2-然后进入小程序包解密unpackminiapp-找到绿色的unpackminiapp软件-按照提示操作进行下一步。" tabindex="-1">2. 然后进入<code>小程序包解密UnpackMiniApp</code>，找到绿色的<code>UnpackMiniApp</code>软件，按照提示操作进行下一步。 <a class="header-anchor" href="#_2-然后进入小程序包解密unpackminiapp-找到绿色的unpackminiapp软件-按照提示操作进行下一步。" aria-label="Permalink to &quot;2. 然后进入`小程序包解密UnpackMiniApp`，找到绿色的`UnpackMiniApp`软件，按照提示操作进行下一步。&quot;">​</a></h3><p><img src="'+d+'" alt="软件安装解压"></p><ul><li>软件安装解压完成后接下来便可马上进行爬取源码了!!!(ps:是不是很坤动呢QAQ!)</li></ul><h3 id="_3-打开温馨面板在左下角找到设置按钮-然后打开文件夹。" tabindex="-1">3.打开温馨面板在左下角找到设置按钮，然后打开文件夹。 <a class="header-anchor" href="#_3-打开温馨面板在左下角找到设置按钮-然后打开文件夹。" aria-label="Permalink to &quot;3.打开温馨面板在左下角找到设置按钮，然后打开文件夹。&quot;">​</a></h3><p><img src="'+u+'" alt="找到微信小程序文件"></p><ul><li>然后打开文件夹，打开文件夹的时候,是在 <code>wxid_sip05kgfmrp22</code>这个目录里面，此时我们需要返回到上一级目录</li></ul><p><img src="'+_+'" alt="提示内容"></p><ul><li>返回上级目录时，会看到以下文件。然后进入<code>Applet</code>文件目录之后。以<code>wx...........</code>开头的便是小程序appid</li></ul><p><img src="'+m+'" alt="提示内容"><img src="'+h+'" alt="提示内容"></p><ul><li>接下来找到你需要编译的小程序的appid，进入目录找到<code>_App_.wxapkg</code>文件(加密文件)</li></ul><p><img src="'+g+'" alt="提示内容"></p><h3 id="_4-小伙你切记这一步是关键步骤哦-打开我们刚刚安装的绿色小软件" tabindex="-1">4.小伙你切记这一步是关键步骤哦，打开我们刚刚安装的绿色小软件 <a class="header-anchor" href="#_4-小伙你切记这一步是关键步骤哦-打开我们刚刚安装的绿色小软件" aria-label="Permalink to &quot;4.小伙你切记这一步是关键步骤哦，打开我们刚刚安装的绿色小软件&quot;">​</a></h3><ul><li>打开之后点击<code>选择加密小程序包</code>之后，找到我们需要解密的小程序对应appid下的<code>_App_.wxapkg</code>文件并打开。</li></ul><p><img src="'+b+'" alt="提示内容"><img src="'+k+'" alt="提示内容"></p><ul><li><p>选择文件之后哦，便会自动编译，如果出现以下界面，即代表编译成功。 <img src="'+y+`" alt="提示内容"></p></li><li><p>解密后的文件放在wxpack文件夹内，解密后的文件名：小程序的appid.wxapkg 这个包。</p></li></ul><h3 id="_5-接下来就是反编译小程序步骤了-这一步依然很重要。" tabindex="-1">5. 接下来就是反编译小程序步骤了，这一步依然很重要。 <a class="header-anchor" href="#_5-接下来就是反编译小程序步骤了-这一步依然很重要。" aria-label="Permalink to &quot;5. 接下来就是反编译小程序步骤了，这一步依然很重要。&quot;">​</a></h3><ul><li><p>首先确保你的电脑拥有node环境，win+R 输入cmd 然后输入node --version即可查看node版本。这里我不做过多介绍。如果您需要帮助请加我微信。</p></li><li><p>然后下载以下依赖，这些是反编译需要用到的哦，缺一不可!!!</p></li></ul><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#babed8;">npm install</span></span>
<span class="line"><span style="color:#babed8;"> </span></span>
<span class="line"><span style="color:#babed8;">npm install esprima</span></span>
<span class="line"><span style="color:#babed8;"> </span></span>
<span class="line"><span style="color:#babed8;">npm install css-tree</span></span>
<span class="line"><span style="color:#babed8;"> </span></span>
<span class="line"><span style="color:#babed8;">npm install cssbeautify</span></span>
<span class="line"><span style="color:#babed8;"> </span></span>
<span class="line"><span style="color:#babed8;">npm install vm2</span></span>
<span class="line"><span style="color:#babed8;"> </span></span>
<span class="line"><span style="color:#babed8;">npm install uglify-es</span></span>
<span class="line"><span style="color:#babed8;"> </span></span>
<span class="line"><span style="color:#babed8;">npm install js-beautify</span></span></code></pre></div><h3 id="_6-上面依赖下载完毕之后-进入到-wxappunpacker-文件夹内-在此文件夹地址栏输入cmd-打开命令提示符-或者cd到此文件夹" tabindex="-1">6.上面依赖下载完毕之后，进入到 wxappUnpacker 文件夹内，在此文件夹地址栏输入cmd，打开命令提示符，或者cd到此文件夹； <a class="header-anchor" href="#_6-上面依赖下载完毕之后-进入到-wxappunpacker-文件夹内-在此文件夹地址栏输入cmd-打开命令提示符-或者cd到此文件夹" aria-label="Permalink to &quot;6.上面依赖下载完毕之后，进入到 wxappUnpacker 文件夹内，在此文件夹地址栏输入cmd，打开命令提示符，或者cd到此文件夹；&quot;">​</a></h3><ul><li>然后输入一下命令<code>bingo.bat 反编译包的路径</code>；你可以直接将这个路径包拖入进去.然后回车</li></ul><p><img src="`+x+'" alt="提示内容"><img src="'+f+'" alt="提示内容"></p><ul><li>如果出现以下提示内容，代表您已经反编译成功了。</li></ul><p><img src="'+w+'" alt="提示内容"></p><ul><li>然后你就可以将以下文件拖入到开发者工具中便可运行查看效果了。</li></ul><p><img src="'+j+'" alt="提示内容"></p><h4 id="_7-温馨提示-如果遇到反编译之后最终的文件没有app-json文件的话说明此小程序已做过防反编译措施。" tabindex="-1">7.温馨提示，如果遇到反编译之后最终的文件没有app.json文件的话说明此小程序已做过防反编译措施。 <a class="header-anchor" href="#_7-温馨提示-如果遇到反编译之后最终的文件没有app-json文件的话说明此小程序已做过防反编译措施。" aria-label="Permalink to &quot;7.温馨提示，如果遇到反编译之后最终的文件没有app.json文件的话说明此小程序已做过防反编译措施。&quot;">​</a></h4><h4 id="_8-如果遇到this-package-is-a-subpackage-which-should-be-unpacked-with-s-maindir-这个错误的话-应该是小程序已做过分包。" tabindex="-1">8.如果遇到<code>this package is a subPackage which should be unpacked with -s=&lt;MainDir&gt;.</code>这个错误的话，应该是小程序已做过分包。 <a class="header-anchor" href="#_8-如果遇到this-package-is-a-subpackage-which-should-be-unpacked-with-s-maindir-这个错误的话-应该是小程序已做过分包。" aria-label="Permalink to &quot;8.如果遇到`this package is a subPackage which should be unpacked with -s=&lt;MainDir&gt;.`这个错误的话，应该是小程序已做过分包。&quot;">​</a></h4><ul><li><p>打开小程序时生成了两个.wxapkg文件，编译另一个文件即可，编译分包和主包的命令是不一样的：</p></li><li><p>node ./wuWxapkg.js 分包路径 -s=主包路径</p></li></ul>',33),A=a("br",null,null,-1),T=a("ul",null,[a("li",null,[s("好了，以上的总结就到此为止了，如果"),a("code",null,"有疑问可以不问"),s("也可以联系作者。咱们下期再见! Good bye! 🌸")])],-1);function V(v,C,M,N,U,S){const p=l("font");return n(),i("div",null,[P,t(p,{color:"#dd00dd"},{default:o(()=>[s("如果有分包的话，反编译可能会稍微复杂一点!你要有耐心...")]),_:1}),A,T])}const B=e(q,[["render",V]]);export{$ as __pageData,B as default};
