import{_ as a,o as t,c as e,V as i}from"./chunks/framework.6e551575.js";const s="/img/study/uniapp/uniapp小程序使用animate.css/引入静态资源.jpg",n="/img/study/uniapp/uniapp小程序使用animate.css/更改静态资源前.jpg",c="/img/study/uniapp/uniapp小程序使用animate.css/更改静态资源后.jpg",o="/img/study/uniapp/uniapp小程序使用animate.css/使用.jpg",p="/img/study/uniapp/uniapp小程序使用animate.css/样式设置.jpg",k=JSON.parse('{"title":"🌼 uniapp小程序使用animate.css库","description":"","frontmatter":{},"headers":[],"relativePath":"article/uniapp/uniapp使用animate.css.md","filePath":"article/uniapp/uniapp使用animate.css.md"}'),l={name:"article/uniapp/uniapp使用animate.css.md"},m=i('<h1 id="uniapp小程序使用animate-css库" tabindex="-1">🌼 uniapp小程序使用animate.css库 <a class="header-anchor" href="#uniapp小程序使用animate-css库" aria-label="Permalink to &quot;:blossom: uniapp小程序使用animate.css库&quot;">​</a></h1><blockquote><p>在日常小程序开发中，偶尔需要集成第三方库来完成一些样式的调整，例如animate.css，接下来跟大家演示一下如何在咱们的小程序中集成animate,一起看看吧....</p></blockquote><h4 id="_1-首先安装animate-css库" tabindex="-1">1.首先安装animate.css库 <a class="header-anchor" href="#_1-首先安装animate-css库" aria-label="Permalink to &quot;1.首先安装animate.css库&quot;">​</a></h4><ul><li>1.首先找到项目根目录，在资源管理器中打开，然后在盘符路径聚焦输入CMD回车进入DOS</li><li>2.输入npm install animate.css</li></ul><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#babed8;">npm install animate.css</span></span></code></pre></div><ul><li>3.如果没有node_modules 请执行<code>npm intit</code> 然后再执行<code>npm install</code> 生成包管理文件之后再重新下载animate.css的依赖</li></ul><h4 id="_2-在node-mudules文件夹里面找到animate-css库-然后找到animate-css这个文件复制" tabindex="-1">2.在node_mudules文件夹里面找到animate.css库，然后找到animate.css这个文件复制! <a class="header-anchor" href="#_2-在node-mudules文件夹里面找到animate-css库-然后找到animate-css这个文件复制" aria-label="Permalink to &quot;2.在node_mudules文件夹里面找到animate.css库，然后找到animate.css这个文件复制!&quot;">​</a></h4><h4 id="_3-然后放到static静态资源文件或者你其他自定义文件目录" tabindex="-1">3.然后放到static静态资源文件或者你其他自定义文件目录 <a class="header-anchor" href="#_3-然后放到static静态资源文件或者你其他自定义文件目录" aria-label="Permalink to &quot;3.然后放到static静态资源文件或者你其他自定义文件目录&quot;">​</a></h4><h4 id="_4-在app-vue文件里面引入animate-css-例如我的是在static文件夹内" tabindex="-1">4.在App.vue文件里面引入animate.css(例如我的是在static文件夹内) <a class="header-anchor" href="#_4-在app-vue文件里面引入animate-css-例如我的是在static文件夹内" aria-label="Permalink to &quot;4.在App.vue文件里面引入animate.css(例如我的是在static文件夹内)&quot;">​</a></h4><p><code>@import &quot;@/static/animate.css&quot;</code></p><p><img src="'+s+'" alt="alt 示例图片"></p><h4 id="_5-最重要的步骤-修改static内的animate-css文件代码-小程序必须要修改" tabindex="-1">5.最重要的步骤，修改<code>static</code>内的<code>animate.css</code>文件代码，小程序必须要修改 <a class="header-anchor" href="#_5-最重要的步骤-修改static内的animate-css文件代码-小程序必须要修改" aria-label="Permalink to &quot;5.最重要的步骤，修改`static`内的`animate.css`文件代码，小程序必须要修改&quot;">​</a></h4><ul><li>将<code>:root</code>根选择器改为<code>page</code>(千万不要瓜兮兮的去改node_modules里面的代码哈!!!)</li></ul><p><img src="'+n+'" alt="alt 示例图片"><img src="'+c+'" alt="alt 示例图片"></p><h4 id="_6-最后一步-在您想要使用的地方加上类名-animate-animated-以及你想使用的动画具体效果-例如-animate-heartbeat" tabindex="-1">6.最后一步，在您想要使用的地方加上类名 animate__animated 以及你想使用的动画具体效果(例如：animate__heartBeat) <a class="header-anchor" href="#_6-最后一步-在您想要使用的地方加上类名-animate-animated-以及你想使用的动画具体效果-例如-animate-heartbeat" aria-label="Permalink to &quot;6.最后一步，在您想要使用的地方加上类名 animate__animated 以及你想使用的动画具体效果(例如：animate__heartBeat)&quot;">​</a></h4><p><img src="'+o+'" alt="alt 示例图片"></p><h4 id="_7-如果你想设置动效执行时间或者动画执行次数等-infinite-无限执行-一直执行-不停地执行" tabindex="-1">7.如果你想设置动效执行时间或者动画执行次数等(infinite 无限执行 一直执行 不停地执行) <a class="header-anchor" href="#_7-如果你想设置动效执行时间或者动画执行次数等-infinite-无限执行-一直执行-不停地执行" aria-label="Permalink to &quot;7.如果你想设置动效执行时间或者动画执行次数等(infinite 无限执行 一直执行 不停地执行)&quot;">​</a></h4><p><img src="'+p+'" alt="alt 示例图片"></p><ul><li>好了，以上的总结就到此为止了，如果<code>有疑问可以不问</code>也可以联系作者。咱们下期再见! Good bye! 🌸</li></ul>',19),r=[m];function d(u,_,h,b,g,f){return t(),e("div",null,r)}const P=a(l,[["render",d]]);export{k as __pageData,P as default};
